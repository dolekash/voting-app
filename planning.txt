Application:
A functionality where user can give vote to the given set of candidates


Functionality

User Authentication:
Users should be able to sign up by providing their details, including a unique government ID (Aadhar card).
Users can sign in using their Aadhar card number and password.

Candidate List:
Users should have access to view the complete list of candidates participating in the election.

Voting System:
Each user is allowed to cast only one vote for a candidate of their choice.

Vote Count Display:
The real-time voting results should be displayed in ascending order based on the vote count.

Unique User Identification:
Each user's account must be tied to a unique Aadhar card number to ensure authenticity.

Admin Management:
An admin role should be established to manage election candidates, including adding, editing, or removing candidates.
Admin can't vote.

Password Management:
Users should have the option to change their password securely if required.

Secure Login:
Users can only log in using their Aadhar card number and password for identity verification.

------------------------------------------------------------------------------------------------


Routes

User Authentication:
/signup: POST - create a new user account.
/login: POST - login into existing account with adharcard & password.

Voting:
/candidates: GET - get the list of candidates.
/vote/candidateId: POST - Vote for specific candidate.

Vote Counts:
/vote/counts - Get the list of candidate sorted by their vote counts.


User Profile:
/profile: GET - get user profile.
/profile/password: PUT can the users password.

Admin Candidate Management:
/candidate: POST - create a new candidate.
/candidate/candidateId: PUT - update a exisiting candidate.
/candidate/:candidateId: DELETE - Delete a candidate from the list.


